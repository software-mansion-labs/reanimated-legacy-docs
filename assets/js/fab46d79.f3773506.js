"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[1010],{4461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={id:"dispatchCommand",title:"dispatchCommand",sidebar_label:"dispatchCommand"},i=void 0,c={unversionedId:"api/nativeMethods/dispatchCommand",id:"api/nativeMethods/dispatchCommand",title:"dispatchCommand",description:"Allows to dispatch command on a native component synchronously from the UI thread.",source:"@site/docs/api/nativeMethods/dispatchCommand.md",sourceDirName:"api/nativeMethods",slug:"/api/nativeMethods/dispatchCommand",permalink:"/react-native-reanimated/docs/api/nativeMethods/dispatchCommand",draft:!1,tags:[],version:"current",frontMatter:{id:"dispatchCommand",title:"dispatchCommand",sidebar_label:"dispatchCommand"},sidebar:"docs",previous:{title:"scrollTo",permalink:"/react-native-reanimated/docs/api/nativeMethods/scrollTo"},next:{title:"getRelativeCoords",permalink:"/react-native-reanimated/docs/api/miscellaneous/getRelativeCoords"}},d={},s=[{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"<code>commandName</code> String",id:"commandname-string",level:4},{value:"<code>args</code> Array<any>",id:"args-arrayany",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}],m={toc:s};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Allows to dispatch command on a native component synchronously from the UI thread."),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"animatedref"},(0,r.kt)("inlineCode",{parentName:"h4"},"animatedRef")),(0,r.kt)("p",null,"The product of ",(0,r.kt)("a",{parentName:"p",href:"../hooks/useAnimatedRef"},(0,r.kt)("inlineCode",{parentName:"a"},"useAnimatedRef"))," which is Reanimated's extension of a standard React ref (delivers the view tag on the UI thread)."),(0,r.kt)("h4",{id:"commandname-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"commandName")," ","[String]"),(0,r.kt)("p",null,"The name of the command to execute, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"focus")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"scrollToEnd"),"."),(0,r.kt)("h4",{id:"args-arrayany"},(0,r.kt)("inlineCode",{parentName:"h4"},"args")," ","[Array<any",">]"),(0,r.kt)("p",null,"The array of command arguments. Defaults to an empty array."),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import Animated, {\n  dispatchCommand,\n  useAnimatedRef,\n} from 'react-native-reanimated';\nimport { Button, StyleSheet, TextInput, View } from 'react-native';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\n\nimport React from 'react';\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nexport default function DispatchCommandExample() {\n  const aref = useAnimatedRef<TextInput>();\n\n  const gesture = Gesture.Tap().onStart(() => {\n    dispatchCommand(aref, 'focus');\n  });\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput ref={aref} style={styles.input} />\n      <GestureDetector gesture={gesture}>\n        <Button title=\"Focus\" />\n      </GestureDetector>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    width: 200,\n    padding: 5,\n  },\n});\n")))}l.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(n),u=r,f=p["".concat(d,".").concat(u)]||p[u]||l[u]||o;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);