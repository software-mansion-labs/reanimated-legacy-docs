"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[65],{4780:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={id:"getRelativeCoords",title:"getRelativeCoords",sidebar_label:"getRelativeCoords"},i=void 0,l={unversionedId:"api/miscellaneous/getRelativeCoords",id:"version-2.x/api/miscellaneous/getRelativeCoords",title:"getRelativeCoords",description:"Determines the location on the screen, relative to the given view. It might be useful when there are only absolute coordinates available and you need coordinates relative to the parent.",source:"@site/versioned_docs/version-2.x/api/miscellaneous/getRelativeCoords.md",sourceDirName:"api/miscellaneous",slug:"/api/miscellaneous/getRelativeCoords",permalink:"/reanimated-legacy-docs/docs/2.x/api/miscellaneous/getRelativeCoords",draft:!1,tags:[],version:"2.x",frontMatter:{id:"getRelativeCoords",title:"getRelativeCoords",sidebar_label:"getRelativeCoords"},sidebar:"docs",previous:{title:"scrollTo",permalink:"/reanimated-legacy-docs/docs/2.x/api/nativeMethods/scrollTo"},next:{title:"Interpolate",permalink:"/reanimated-legacy-docs/docs/2.x/api/miscellaneous/interpolate"}},s={},c=[{value:"Arguments",id:"arguments",level:3},{value:"animatedRef",id:"animatedref",level:4},{value:"x",id:"x",level:4},{value:"y",id:"y",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Determines the location on the screen, relative to the given view. It might be useful when there are only absolute coordinates available and you need coordinates relative to the parent."),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"animatedref"},"animatedRef"),(0,a.kt)("p",null,"The product of ",(0,a.kt)("a",{parentName:"p",href:"../hooks/useAnimatedRef"},(0,a.kt)("inlineCode",{parentName:"a"},"useAnimatedRef"))," is Reanimated's extension of a standard React ref (delivers the view tag on the UI thread). This ref should be passed as a prop to the view relative to which we want to know coordinates."),(0,a.kt)("h4",{id:"x"},"x"),(0,a.kt)("p",null,"Absolute ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," coordinate."),(0,a.kt)("h4",{id:"y"},"y"),(0,a.kt)("p",null,"Absolute ",(0,a.kt)("inlineCode",{parentName:"p"},"y")," coordinate"),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,"Object which contains relative coordinates"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"x")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"y"))),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const Comp = () => {\n  const aref = useAnimatedRef();\n  // ...\n\n  const gestureHandler = useAnimatedGestureHandler({\n    onEnd: (event) => {\n      getRelativeCoords(aref, event.absoluteX, event.absoluteY)\n    },\n  });\n\n  return <View ref={aref}>\n    <PanGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View style={[styles.box]} />\n    </PanGestureHandler>\n  </View>;\n};\n")))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,v=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(v,i(i({ref:t},d),{},{components:n})):r.createElement(v,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);