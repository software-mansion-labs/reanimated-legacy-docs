"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[3709],{6170:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),l=(r(7294),r(3905));const o={id:"useScrollViewOffset",title:"useScrollViewOffset",sidebar_label:"useScrollViewOffset"},a=void 0,i={unversionedId:"api/hooks/useScrollViewOffset",id:"api/hooks/useScrollViewOffset",title:"useScrollViewOffset",description:"This hook allows you to create animations based on the offset of a ScrollView.",source:"@site/docs/api/hooks/useScrollViewOffset.md",sourceDirName:"api/hooks",slug:"/api/hooks/useScrollViewOffset",permalink:"/reanimated-legacy-docs/docs/api/hooks/useScrollViewOffset",draft:!1,tags:[],version:"current",frontMatter:{id:"useScrollViewOffset",title:"useScrollViewOffset",sidebar_label:"useScrollViewOffset"},sidebar:"docs",previous:{title:"useHandler",permalink:"/reanimated-legacy-docs/docs/api/hooks/useHandler"},next:{title:"useSharedValue",permalink:"/reanimated-legacy-docs/docs/api/hooks/useSharedValue"}},s={},c=[{value:"Arguments",id:"arguments",level:3},{value:"<code>aref</code> RefObject<Animated.ScrollView>",id:"aref-refobjectanimatedscrollview",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2}],u={toc:c};function f(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This hook allows you to create animations based on the offset of a ",(0,l.kt)("inlineCode",{parentName:"p"},"ScrollView"),".\nThe hook automatically detects if the ",(0,l.kt)("inlineCode",{parentName:"p"},"ScrollView")," is horizontal or vertical."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"useScrollViewOffset(aref: RefObject<Animated.ScrollView>) => [SharedValue<number>]\n")),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("h4",{id:"aref-refobjectanimatedscrollview"},(0,l.kt)("inlineCode",{parentName:"h4"},"aref")," ","[RefObject","<","Animated.ScrollView",">]"),(0,l.kt)("p",null,"An Animated reference to a ",(0,l.kt)("inlineCode",{parentName:"p"},"ScrollView"),". The reference should be passed to the\nappropriate ",(0,l.kt)("inlineCode",{parentName:"p"},"ScrollView")," in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ref")," prop."),(0,l.kt)("h3",{id:"returns"},"Returns"),(0,l.kt)("p",null,"A shared value which holds the current offset of the ",(0,l.kt)("inlineCode",{parentName:"p"},"ScrollView"),"."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function ScrollViewOffsetExample() {\n  const aref = useAnimatedRef<Animated.ScrollView>();\n  const scrollHandler = useScrollViewOffset(aref);\n\n  useAnimatedStyle(() => {\n    console.log(scrollHandler.value);\n    return {};\n  });\n\n  return (\n    <>\n      <View style={styles.positionView}>\n        <Text>Test</Text>\n      </View>\n      <View style={styles.divider} />\n      <Animated.ScrollView\n        ref={aref}\n        style={styles.scrollView}>\n        {[...Array(100)].map((_, i) => (\n          <Text key={i} style={styles.text}>\n            {i}\n          </Text>\n        ))}\n      </Animated.ScrollView>\n    </>\n  );\n}\n")))}f.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),d=l,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||o;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function d(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,a=new Array(o);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"}}]);